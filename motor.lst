   1               		.file	"motor.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               	.global	motor_drive
  12               	motor_drive:
  13               	.LFB1:
  14               		.file 1 "motor.c"
   1:motor.c       **** #include "motor.h"
   2:motor.c       **** 
   3:motor.c       **** #include "serial.h"
   4:motor.c       **** 
   5:motor.c       **** void motor_drive(uint8_t motor, int8_t speed) {
  15               		.loc 1 5 0
  16               		.cfi_startproc
  17               	.LVL0:
  18 0000 CF93      		push r28
  19               	.LCFI0:
  20               		.cfi_def_cfa_offset 3
  21               		.cfi_offset 28, -2
  22 0002 DF93      		push r29
  23               	.LCFI1:
  24               		.cfi_def_cfa_offset 4
  25               		.cfi_offset 29, -3
  26               	/* prologue: function */
  27               	/* frame size = 0 */
  28               	/* stack size = 2 */
  29               	.L__stack_usage = 2
  30 0004 C62F      		mov r28,r22
   6:motor.c       ****     uint8_t command = motor==0?0:4;
  31               		.loc 1 6 0
  32 0006 8111      		cpse r24,__zero_reg__
  33 0008 00C0      		rjmp .L4
  34 000a D0E0      		ldi r29,0
  35 000c 00C0      		rjmp .L2
  36               	.L4:
  37 000e D4E0      		ldi r29,lo8(4)
  38               	.L2:
  39               	.LVL1:
   7:motor.c       ****     if(speed < 0) {
  40               		.loc 1 7 0 discriminator 3
  41 0010 C7FF      		sbrs r28,7
  42 0012 00C0      		rjmp .L3
   8:motor.c       ****         command += 1;
  43               		.loc 1 8 0
  44 0014 DF5F      		subi r29,lo8(-(1))
  45               	.LVL2:
   9:motor.c       ****         if(speed == -128) {
  46               		.loc 1 9 0
  47 0016 C038      		cpi r28,lo8(-128)
  48 0018 01F0      		breq .L5
  10:motor.c       ****             speed = 127; // Slight bodge. Range should be -127<=x<=127
  11:motor.c       ****         }else{
  12:motor.c       ****             speed = -speed;
  49               		.loc 1 12 0
  50 001a C195      		neg r28
  51               	.LVL3:
  52 001c 00C0      		rjmp .L3
  53               	.LVL4:
  54               	.L5:
  10:motor.c       ****             speed = 127; // Slight bodge. Range should be -127<=x<=127
  55               		.loc 1 10 0
  56 001e CFE7      		ldi r28,lo8(127)
  57               	.LVL5:
  58               	.L3:
  13:motor.c       ****         }
  14:motor.c       ****     }
  15:motor.c       ****     uint8_t checksum = (MOTOR_ADDR+command+speed) & 0x7f;
  16:motor.c       ****     fputc(MOTOR_ADDR, &uartfile);
  59               		.loc 1 16 0
  60 0020 60E0      		ldi r22,lo8(uartfile)
  61 0022 70E0      		ldi r23,hi8(uartfile)
  62 0024 80E8      		ldi r24,lo8(-128)
  63 0026 90E0      		ldi r25,0
  64               	.LVL6:
  65 0028 0E94 0000 		call fputc
  66               	.LVL7:
  17:motor.c       ****     fputc(command, &uartfile);
  67               		.loc 1 17 0
  68 002c 60E0      		ldi r22,lo8(uartfile)
  69 002e 70E0      		ldi r23,hi8(uartfile)
  70 0030 8D2F      		mov r24,r29
  71 0032 90E0      		ldi r25,0
  72 0034 0E94 0000 		call fputc
  73               	.LVL8:
  18:motor.c       ****     fputc(speed, &uartfile);
  74               		.loc 1 18 0
  75 0038 60E0      		ldi r22,lo8(uartfile)
  76 003a 70E0      		ldi r23,hi8(uartfile)
  77 003c 8C2F      		mov r24,r28
  78 003e 9927      		clr r25
  79 0040 87FD      		sbrc r24,7
  80 0042 9095      		com r25
  81 0044 0E94 0000 		call fputc
  82               	.LVL9:
  15:motor.c       ****     uint8_t checksum = (MOTOR_ADDR+command+speed) & 0x7f;
  83               		.loc 1 15 0
  84 0048 8C2F      		mov r24,r28
  85 004a 8D0F      		add r24,r29
  86 004c 8F77      		andi r24,lo8(127)
  87               	.LVL10:
  19:motor.c       ****     fputc(checksum, &uartfile);
  88               		.loc 1 19 0
  89 004e 60E0      		ldi r22,lo8(uartfile)
  90 0050 70E0      		ldi r23,hi8(uartfile)
  91 0052 90E0      		ldi r25,0
  92               	/* epilogue start */
  20:motor.c       **** }
  93               		.loc 1 20 0
  94 0054 DF91      		pop r29
  95               	.LVL11:
  96 0056 CF91      		pop r28
  97               	.LVL12:
  19:motor.c       ****     fputc(checksum, &uartfile);
  98               		.loc 1 19 0
  99 0058 0C94 0000 		jmp fputc
 100               	.LVL13:
 101               		.cfi_endproc
 102               	.LFE1:
 104               	.Letext0:
 105               		.file 2 "/usr/lib/avr/include/stdint.h"
 106               		.file 3 "/usr/lib/avr/include/stdio.h"
 107               		.file 4 "serial.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 motor.c
     /tmp/ccGzC6jz.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/ccGzC6jz.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/ccGzC6jz.s:4      *ABS*:000000000000003f __SREG__
     /tmp/ccGzC6jz.s:5      *ABS*:0000000000000000 __tmp_reg__
     /tmp/ccGzC6jz.s:6      *ABS*:0000000000000001 __zero_reg__
     /tmp/ccGzC6jz.s:12     .text:0000000000000000 motor_drive

UNDEFINED SYMBOLS
uartfile
fputc
